#
# ci_ut_helloworld
#
# Copyright (C) 2020 Shuduo Sang <sangshuduo@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#
# Configuration
#
language: c

compiler:
  - clang
  - gcc

before_install:
  - |-
    case $TRAVIS_OS_NAME in
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
        export msys2+=" -msys2 -c "\"\$@"\" --"
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
        ## Install more MSYS2 packages from https://packages.msys2.org/base here
        taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export MAKE=mingw32-make  # so that Autotools can find it
        ;;
    esac

before_cache:
  - |-
    case $TRAVIS_OS_NAME in
      windows)
      # https://unix.stackexchange.com/a/137322/107554
      $msys2 pacman --sync --clean --noconfirm
      ;;
    esac

cache:
  directories:
    - |-
      case $TRAVIS_OS_NAME in
        windows)
        - $HOME/AppData/Local/Temp/chocolatey
        - /C/tools/msys64
          ;;
      esac

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir debug
  - cd debug

script:
  - cmake ..
  - cmake --build .


#
# Build Matrix
#
matrix:
  - os: linux
    compiler: gcc
    env: ENV_COVER="true"
    addons:
      apt:
        packages:
          - build-essential
          - cmake
          - lcov
    before_install:
      - cd ${TRAVIS_BUILD_DIR}
      - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - chmod +x ./cc-test-reporter
      - ./cc-test-reporter before-build

    after_success:
      - |-
        case $TRAVIS_OS_NAME in
          linux)

            RED='\033[0;31m'
            GREEN='\033[1;32m'
            GREEN_DARK='\033[0;32m'
            GREEN_UNDERLINE='\033[4;32m'
            NC='\033[0m'
      
            cd ${TRAVIS_BUILD_DIR}
            cd debug
            rm -rf *
            cmake -DCOVER=true ..
            make
            ./ci_ut_helloworld
            cd ${TRAVIS_BUILD_DIR}
            lcov -d . --capture -o coverage.info
            lcov -l coverage.info || exit $?

            gem install coveralls-lcov

            coveralls-lcov coverage.info
            if [ "$?" -eq "0" ]; then
              echo -e "${GREEN} ## Uploaded to Coveralls.io! ## ${NC}"
            else
              echo -e "${RED} ## Coveralls.io not collect coverage report! ## ${NC} "
              exit $?
            fi

            bash <(curl -s https://codecov.io/bash) -f coverage.info
            if [ "$?" -eq "0" ]; then
              echo -e "${GREEN} ## Uploaded to Codecov! ## ${NC} "
            else
              echo -e "${RED} ## Codecov did not collect coverage report! ## ${NC} "
              exit $?
            fi

            ./cc-test-reporter format-coverage coverage.info -t lcov --debug
            ./cc-test-reporter upload-coverage
            if [ "$?" -eq "0" ]; then
              echo -e "${GREEN} ## Uploaded to CodeClimate! ## ${NC} "
            else
              echo -e "${RED} ## CodeClimate did not collect coverage report! ## ${NC} "
              exit $?
            fi
          ;;
        esac

  - os: osx
    addons:
      homebrew:
        - cmake

  - os: windows
